<style>
    .Boton-Subir {
        background-image: linear-gradient(to right, #5a0dff -5%, #ff29b8 31%, #ff581c, #ff29b8, #5a0dff);
        box-shadow: 5px 2px 10px 0px rgba(45, 23, 70, 0.2) inset, -5px -3px 8px 0px rgba(71, 23, 11, 0.2) inset !important;
        background-size: 200% 100%;
        transition: all 0.2s ease-in-out;
        color: white;
        padding: 10px 20px;
        border: none;
        cursor: pointer;
        border-radius: 30px;
        font-weight: bold;
        font-size: 16px;
    }

    .Boton-Subir:hover {
        background-position: 90% 0 !important;
        transition: all 0.4s ease-in-out !important;
        box-shadow: 0px 0px 20px rgba(255, 53, 144, 0.5) !important;
        transform: scale(1.05) !important; /* Escala el botón y el texto */
    } 

    .botonsubir-thumbnails {
        border-radius: 10px;
        width: 200px;
        height: 150px;
        object-fit: contain;
        position: relative;
    }

    #previewContainer {
        position: relative;
        display: none;
        width: fit-content;
    }

    #removeButton {
        background: none;
        border: none;
        color: white;
        background-color: #ff29b8;
        cursor: pointer;
        border-radius: 50%;
        width: 30px;
        height: 30px;
        position: absolute;
        top: -10px;
        right: -10px;
        display: flex;
        justify-content: center;
        align-items: center;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
    }

    #removeButton img {
        width: 15px;
        height: 15px;
        vertical-align: middle;
    }

    .avisoarchivo {
        position: relative !important;
        background: #0f0e0e !important;
        color: #fff !important;
        border-radius: 30px !important;
        font-size: 20px !important;
        padding: 20px !important;
        border: 3px solid transparent !important;
        background-image: linear-gradient(rgb(16, 16, 16), rgb(16, 16, 16)),
            linear-gradient(to right, #5a0dff -5%, #ff29b8 31%, #ff581c, #ff29b8, #5a0dff) !important;
        background-origin: border-box !important;
        background-clip: padding-box, border-box !important;
        background-size: 200% 100% !important;
        animation: gradientAnimation 4s ease-in-out infinite !important;
        display: flex;
        flex-direction: column;
    }

    .botonaviso {
        background-image: linear-gradient(to right, #5a0dff -5%, #ff29b8 31%, #ff581c, #ff29b8, #5a0dff) !important;
        box-shadow: 5px 2px 10px 0px rgba(45, 23, 70, 0.2) inset, -5px -3px 8px 0px rgba(71, 23, 11, 0.2) inset !important;
        background-size: 200% 100% !important;
        transition: all 0.2s ease-in-out !important;
        font-weight: bold !important;
        border: 2px solid #fff !important;
        padding: .75em 2em;
        cursor: pointer;
        border-radius: 30px;
        align-self: flex-end; /* Posiciona el botón en la esquina inferior derecha*/
        color: #fff;
    }

    .botonaviso:hover {
        background-position: 90% 0 !important;
        transition: all 0.4s ease-in-out !important;
        box-shadow: 0px 0px 20px rgba(255, 53, 144, 0.5) !important;
        transform: scale(1.05) !important; /* Escala el botón y el texto */
        font-weight: bold !important;
    }

#fileInput {
display: none;
}

    @media only screen and (max-width: 768px) {
        .pd-form__input {
            text-align: center;
        }
        
        #previewContainer {
            margin: 0 auto;
        }
        
        .avisoarchivo {
            padding: 5px 5px 15px 5px !important;
            width: 90%;
        }

        .product-form__input {
text-align: center;
}

    }

    .hidden {
    display: none; /* Oculta el elemento */
}


    .custom.form__label {
    margin-bottom: 0.6rem;
    display: block; /* Asegura que el label se muestre en una línea separada */
    text-align: left; /* Alineación por defecto */
    width: 100%; /* Asegura que el label ocupe todo el ancho del contenedor */
}

.field-container {
    display: flex;
    flex-direction: column;
    align-items: flex-start; /* Alineación por defecto en pantallas grandes */
    width: 50%; /* Ancho por defecto para pantallas grandes */
}

.field.custom {
    margin-top: 0;
    width: 100%; /* Ocupa el 100% del ancho del contenedor */
}

.custom .field__input {
    padding-top: 0.8rem;
    width: 100%; /* Ocupa el 100% del ancho del contenedor */
    height: auto; /* La altura será automática */
    resize: vertical; /* Permite que el usuario ajuste la altura */
    overflow: hidden; /* Oculta las barras de desplazamiento */
    box-sizing: border-box; /* Asegura que el padding se incluya en el ancho total */
}

.field__input::placeholder {
    color: #4f4f4f; /* Gris opaco */
    opacity: 1; /* Asegura que el color del placeholder sea visible */
  }

/* Media Query para dispositivos móviles */
@media (max-width: 768px) {
    .field-container {
        width: 100%; /* Ancho completo en dispositivos móviles */
        align-items: center; /* Centra el contenido del contenedor */
    }
    
    .custom.form__label {
        text-align: center; /* Centra el texto del label en móviles */
    }

    #switchCrack {
        text-align: center; /* Centra el texto del label en móviles */
    }
}

       /* From Uiverse.io by Yaya12085 */ 
/* El contenedor del switch */
.switchPro {
  font-size: 17px;
  position: relative;
  display: inline-block;
  width: 200px;
  height: 2em;
}

/* El slider del switch */
.sliderPro {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: linear-gradient(to right, #5a0dff -5%, #ff29b8 31%, #ff581c, #ff29b8, #5a0dff);
  color: #FFF;
  font-weight: 600;
  border-radius: 30px;
  border: solid 1px #fff;
  display: flex;
  justify-content: space-around;
  align-items: center;
  transition: .4s;
  background-size: 200% 100%;
  animation: gradientAnimation 4s linear infinite;
}

/* Animación de cambio de gradiente */
@keyframes gradientAnimation {
  0% {
    background-position: 0% 0;
  }
  50% {
    background-position: 100% 0;
  }
  100% {
    background-position: 0% 0;
  }
}

/* Estilo antes del slider */
.sliderPro:before {
  position: absolute;
  content: "LOGO";
  height: 90%;
  width: 48%;
  left: 2%;
  border-radius: 20px;
  background-color: #cccccc;
  color: #3a3a3a;
  display: grid;
  align-content: center;
  justify-content: center;
  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.15);
  transition: .4s;
}

/* Efecto de pulso para el switch seleccionado */
.switchPro input:checked + .sliderPro {
  background-image: linear-gradient(to right, #5a0dff -5%, #ff29b8 31%, #ff581c, #ff29b8, #5a0dff);
  color: #fff;
  animation: pulse 1s ease-in-out infinite;
}

/* Animación de pulso */
@keyframes pulse {
  0% {
    transform: scale(1);
    box-shadow: 0 0 0 rgba(0, 0, 0, 0.2);
  }
  50% {
    transform: scale(1.1);
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
  }
  100% {
    transform: scale(1);
    box-shadow: 0 0 0 rgba(0, 0, 0, 0.2);
  }
}

.sliderPro:after {
  content: "";
  position: absolute;
  top: -7px;
  left: -7px;
  right: -7px;
  bottom: -7px;
  border-radius: 1.71em;
  background-image: linear-gradient(0deg, rgba(0, 0, 0, 0.06), rgba(0, 0, 0, 0.1));
  z-index: -1;
}

/* Cuando el switch está seleccionado */
.switchPro input:checked + .sliderPro:before {
  content: "NOMBRE";
  transform: translateX(100%);
  color: #3a3a3a;
}

.switchPro input {
  display: none;
}

</style>

<div id="switchCrack">
<label class="switchPro">
  <input type="checkbox" id="toggleSwitch" checked>
  <div class="sliderPro">
    <span>LOGO</span>
    <span>NOMBRE</span>
  </div>
</label>
  
</div>

<div class="product-form__input" id="logo-field">
    <label style="display:none;" class="pd-form__label">Subir Archivo</label>
    <input type="file" id="fileInput" form="{{ 'product-form-' | append: section.id }}" name="properties[LOGO]" accept="image/png" style="display: none;">
    <div id="previewContainer">
        <img id="filePreview" class="botonsubir-thumbnails" src="" alt="File Preview" />
        <button type="button" id="removeButton" class="boton-eliminar">
            <img src="https://cdn.shopify.com/s/files/1/0622/2161/5164/files/XIcon.svg?v=1720922730" alt="Remove Icon">
        </button>
    </div>
    <button type="button" id="BotonSubir" class="Boton-Subir">
       SUBIR ARCHIVO
       <img src="https://cdn.shopify.com/s/files/1/0622/2161/5164/files/FolderUpIcon.svg?v=1720358303" alt="FolderUpIcon" style="filter: invert(1); width: 30px; height: 30px; vertical-align: middle; margin-left: 5px;">
    </button>
</div>

<div class="field-container" id="nombre">
<label class="form__label-text custom" for="nombre">Nombre:</label>
<div class="field nombre">
    <input class="field__input" form="{{ 'product-form-' | append: section.id }}" type="text" id="nombrePro" name="properties[Nombre]" placeholder="Escribe tu nombre o el de tu negocio">
</div>
</div>
<div class="field-container hidden" id="nota-field">
    <label class="form__label-text custom" for="nota-opcional">Nota (Opcional):</label>
    <div class="field custom">
        <textarea class="field__input" form="{{ 'product-form-' | append: section.id }}" id="nota-opcional" name="properties[Nota (Opcional)]" placeholder="¿Alguna Sugerencia?"></textarea>
    </div>
</div>




<script>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById('product-form-template--16477474848828__main');
    const fileInput = document.getElementById('fileInput');
    const fileInput2 = document.getElementById('fileInput2');
    const toggleswitchPro = document.getElementById('toggleSwitch');
    const nombreField = document.getElementById('nombre');
    const logoField = document.getElementById('logo-field');
    const notaField = document.getElementById('nota-field');
    const notaOpcionalInput = document.getElementById('nota-opcional'); 
    const notaOpcionalInput2 = document.getElementById('nota-opcional2');
    const botonSubir = document.getElementById('BotonSubir');
    const previewContainer = document.getElementById('previewContainer');
    const filePreview = document.getElementById('filePreview');
    const removeButton = document.getElementById('removeButton');
    const overlay = document.getElementById('overlay');
    const closeOverlay = document.getElementById('closeOverlay');
    const overlayMessage = document.getElementById('overlayMessage');
    const addToCartButtons = document.querySelectorAll(".product-form__submit");
    const nombreInput = document.getElementById('nombrePro');
    const nombreInput2 = document.getElementById('nombrePro2');

    function updateFields() {
        console.log('updateFields: ', toggleswitchPro.checked);
        if (toggleswitchPro.checked) {
            logoField.classList.remove('hidden');
            nombreField.classList.add('hidden');
            notaField.classList.add('hidden');
            fileInput.name = 'properties[LOGO]';
            fileInput.required = false;
            console.log('Logo field visible, Name field hidden');
        } else {
            logoField.classList.add('hidden');
            nombreField.classList.remove('hidden');
            notaField.classList.remove('hidden');
            fileInput.name = '';
            fileInput.required = false;
            console.log('Name field visible, Logo field hidden');
        }
    }

    function checkFields() {
        console.log('Nombre:', nombreInput.value);
        console.log('Archivo cargado:', fileInput.files.length);
        if (!toggleswitchPro.checked && !nombreInput.value) {
            showError("Ups! Has olvidado escribir un nombre.");
            console.log('Error: Nombre no escrito');
            return false;
        }

        if (toggleswitchPro.checked && !fileInput.files.length) {
            showError("Ups! Has olvidado cargar tu archivo.");
            console.log('Error: Archivo no cargado');
            return false;
        }

        return true;
    }

    function showError(message) {
        console.log('Showing error message:', message);
        overlayMessage.textContent = message;
        overlay.style.display = 'flex';
        document.body.style.overflow = 'hidden';
    }

    function handleToggleChange() {
        console.log('Toggle changed:', !toggleswitchPro.checked);
        if (!toggleswitchPro.checked) {
            fileInput.value = "";
            fileInput2.value = "";
            filePreview.src = "";
            previewContainer.style.display = 'none';
            notaOpcionalInput.value = "";
            notaOpcionalInput2.value = "";
            nombreInput.value = "";
            nombreInput2.value = "";
            botonSubir.innerHTML = 'SUBIR ARCHIVO <img src="https://cdn.shopify.com/s/files/1/0622/2161/5164/files/FolderUpIcon.svg?v=1720358303" alt="FolderUpIcon" style="filter: invert(1); width: 30px; height: 30px; vertical-align: middle; margin-left: 5px;">';
            console.log('Archivo y nota opcional limpiados debido al cambio en el switch.');
        }
    }

    function handleFileChange(event) {
        const file = event.target.files[0];
        console.log('File input change event:', file);
        if (file && file.type === 'image/png') {
            const reader = new FileReader();
            reader.onload = function(e) {
                filePreview.src = e.target.result;
                previewContainer.style.display = 'block';
                botonSubir.innerHTML = 'CAMBIAR ARCHIVO <img src="https://cdn.shopify.com/s/files/1/0622/2161/5164/files/RefreshIcon.svg?v=1720358522" alt="RefreshIcon" style="filter: invert(1); width: 30px; height: 30px; vertical-align: middle; margin-left: 5px;">';
                notaField.classList.remove('hidden');
                notaOpcionalInput.value = "";
                nombreInput.value = "";
                notaOpcionalInput2.value = "";
                nombreInput2.value = "";
                console.log('File preview updated');
            }
            reader.readAsDataURL(file);
        } else {
            fileInput.value = "";
            showError("Formato no permitido. Por favor suba su logo en formato .PNG");
            console.log('Error: Formato de archivo no permitido');
        }
    }

    function handleRemoveButton() {
        console.log('Remove button clicked');
        fileInput.value = "";
        filePreview.src = "";
        previewContainer.style.display = 'none';
        botonSubir.innerHTML = 'SUBIR ARCHIVO <img src="https://cdn.shopify.com/s/files/1/0622/2161/5164/files/FolderUpIcon.svg?v=1720358303" alt="FolderUpIcon" style="filter: invert(1); width: 30px; height: 30px; vertical-align: middle; margin-left: 5px;">';
    }

    function handleCloseOverlay() {
        console.log('Close overlay clicked');
        overlay.style.display = 'none';
        document.body.style.overflow = 'auto';
    }

    // Función para sincronizar archivos entre dos inputs
    function syncFiles(event) {
        const sourceInput = event.target;
        const targetInput = sourceInput === fileInput ? fileInput2 : fileInput;
        const file = sourceInput.files[0];

        if (file) {
            const reader = new FileReader();
            reader.onload = (e) => {
                const newFile = new File([e.target.result], file.name, { type: file.type });
                const dataTransfer = new DataTransfer();
                dataTransfer.items.add(newFile);
                targetInput.files = dataTransfer.files;
                console.log(`Archivo sincronizado en ${targetInput.id}:`, targetInput.files[0]);
            };
            reader.readAsArrayBuffer(file);
        }
    }

    // Añadir event listeners a los inputs
    fileInput.addEventListener('change', syncFiles);
    fileInput2.addEventListener('change', syncFiles);


    function syncTextareas(event) {
        console.log('Syncing textareas: event target:', event.target.id);
        const textarea1 = notaOpcionalInput;
        const textarea2 = notaOpcionalInput2;

        if (event.target === textarea1) {
            textarea2.value = textarea1.value;
            console.log('Sync textareas: textarea1 value synced to textarea2');
        } else {
            textarea1.value = textarea2.value;
            console.log('Sync textareas: textarea2 value synced to textarea1');
        }
    }

    function syncNombre(event) {
        console.log('Syncing nombres: event target:', event.target.id);
        const nombre1 = nombreInput;
        const nombre2 = nombreInput2;

        if (event.target === nombre1) {
            nombre2.value = nombre1.value;
            console.log('Sync nombres: nombre1 value synced to nombre2');
        } else {
            nombre1.value = nombre2.value;
            console.log('Sync nombres: nombre2 value synced to nombre1');
        }
    }

    // Event Listeners
    updateFields();
    toggleswitchPro.addEventListener('change', updateFields);
    toggleswitchPro.addEventListener('change', handleToggleChange);
    botonSubir.addEventListener('click', () => {
        if (toggleswitchPro.checked) {
            fileInput.click();
        }
    });
    fileInput.addEventListener('change', handleFileChange);
    fileInput2.addEventListener('change', syncFiles);
    removeButton.addEventListener('click', handleRemoveButton);
    closeOverlay.addEventListener('click', handleCloseOverlay);
    addToCartButtons.forEach(button => {
        button.addEventListener('click', (event) => {
            if (!checkFields()) {
                event.preventDefault();
            }
        });
    });
    notaOpcionalInput.addEventListener('input', syncTextareas);
    notaOpcionalInput2.addEventListener('input', syncTextareas);
    nombreInput.addEventListener('input', syncNombre);
    nombreInput2.addEventListener('input', syncNombre);
});

</script>